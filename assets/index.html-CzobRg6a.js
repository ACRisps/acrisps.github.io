import{_ as i,c as a,a as e,o as n}from"./app-BFgjY7Yd.js";const t="/assets/image-BQeUJMjW.png",h="/assets/image1-mn_s7ZmF.png",l="/assets/image2-Hz7DNuBV.png",r="/assets/image3-JMQdaO2x.png",p="/assets/image4-wApRa3Mu.png",k="/assets/image5-DL9dN7QQ.png",d="/assets/image6-BEjhA17z.png",o="/assets/image7-dJGY_Cib.png",c="/assets/image8-FqUh5fSN.png",g="/assets/image9-FIPAlNaa.png",b="/assets/image10-AeTrk85T.png",m="/assets/image11-BEqtKjyx.png",f="/assets/image12-DM7zZARU.png",u="/assets/image13-UpHUj_Bj.png",v="/assets/image14-G9u-oDRT.png",y="/assets/image15-BY7yoqHb.png",A="/assets/image16-DkW4Ovy_.png",B="/assets/image17-BWzmMt2j.png",_="/assets/image18-DKxQYWT0.png",C={};function D(E,s){return n(),a("div",null,s[0]||(s[0]=[e('<h2 id="bfe-介绍" tabindex="-1"><a class="header-anchor" href="#bfe-介绍"><span>BFE 介绍</span></a></h2><p>BFE（Baidu Frontend / Beyond Frontend）是基于百度统一接入前端开源的七层流量接入系统，类似于nginx，使用Golang实现。详情可以看<a href="https://www.bfe-networks.net/zh_cn/" target="_blank" rel="noopener noreferrer"><u>这里</u></a>。</p><h2 id="内容说明" tabindex="-1"><a class="header-anchor" href="#内容说明"><span>内容说明</span></a></h2><p>由于单位实际生产环境被限制在内网，没有互联网访问，所以以下为离线部署 BFE 的全流程：</p><ul><li>采用二进制下载安装方式</li><li>采用缺省配置部署</li></ul><p>最终实现图形化界面热加载。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>▶️ 操作系统：CentOS 7.9</p><p>🌏 运行环境：VMware Workstation 17.5.1</p><p>🌎 宿主系统：Windows 11 23H2</p><p>🕹️ 远程终端：Xshell 8 beta</p></div><h2 id="理解" tabindex="-1"><a class="header-anchor" href="#理解"><span>理解</span></a></h2><p>BFE Server 本体部署很简单。</p><p>完整的 BFE 部署包括 BFE Server 本体、API Server、Dashboard 和 Conf Agent，整体结构如下：</p><p><img src="'+t+`" alt="image"></p><p>BFE Server 提供 BFE 基础服务，BFE Conf Agent 用于操作 BFE 配置（从 API Server 获取最新的配置并触发bfe热加载），BFE API Server 对外提供Open API接口，完成BFE配置的变更、存储和下发，而 Dashboard 则是BFE 图形界面控制台，用于可视化集群管理。</p><p>其中 BFE Server 和 BFE Conf Agent 在 BFE 实例服务器上同机部署；其余部分可以是远程的，起到图形界面+配置中心的作用。</p><p>Conf Agent 的配置热更新过程如下：</p><blockquote><ul><li>配置文件拉取： <ul><li>以 bfe 热加载 API 触发后会读取的 配置文件列表 为集合，从 API Server 拉取 一到多个配置文件</li><li>如果没有更新的配置，退出本次配置加载</li></ul></li><li>配置文件落盘： <ul><li>将现有的正式的指定配置文件列表拷贝到临时文件夹中</li><li>使用更新的配置创建或者覆盖临时文件夹中的配置</li></ul></li><li>触发bfe热加载： <ul><li>通过调用bfe的热加载接口通知bfe读取临时文件夹的配置完成热加载</li><li>如果失败，退出本次配置加载</li></ul></li><li>将临时文件夹配置设置为正式配置 <ul><li>删除当前正式文件夹(如果是个软连接，原始文件也将同时删除)</li><li>建立名为正式文件夹的软连接，指向临时文件夹</li></ul></li></ul></blockquote><p>各个组件的部署顺序为：</p><ol><li>BFE Server 部署</li><li>API Server 部署</li><li>Dashboard 部署</li><li>Conf Agent 部署</li></ol><h2 id="bfe-server" tabindex="-1"><a class="header-anchor" href="#bfe-server"><span>BFE Server</span></a></h2><h3 id="下载二进制包" tabindex="-1"><a class="header-anchor" href="#下载二进制包"><span>下载二进制包</span></a></h3><p><a href="https://github.com/bfenetworks/bfe/releases" target="_blank" rel="noopener noreferrer">Releases · bfenetworks/bfe (github.com)</a></p><p>本例使用 <code>bfe_1.6.0_linux_amd64.tar.gz</code>，在宿主机上下载。</p><p>下载完成后，使用<code>rz</code>指令传输到虚拟机，放在<code>/home/&lt;用户名&gt;/Downloads</code>目录下，在本例中用户名为<code>acrisps</code>。</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>如果使用VMware虚拟机通过VMware Tools直接将tar.gz包拖入虚拟机中，可能存在文件损坏的问题。具体体现可能是tar解压时报错：</p><p>gzip: stdin: unexpected end of file<br> tar: Unexpected EOF in archive<br> tar: Unexpected EOF in archive<br> tar: Error is not recoverable: exiting now</p><p>因此推荐使用<code>rz</code>指令或其他方式向虚拟机内传送文件。</p></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>上传时出现乱码可以尝试<code>rz -be</code>。</p></div><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>新建文件夹并将文件解压到安装目录：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-server</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zxvf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bfe_1.6.0_linux_amd64.tar.gz</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><p>在 <code>/home/acrisps/bfe-server/bfe_1.6.0_linux_amd64/bin</code>下执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./bfe</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../conf</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+h+'" alt="image1"></p><p>出现类似以下信息说明BFE-Server已经启动成功：</p><p><img src="'+l+'" alt="image2"></p><p>可以访问 BFE monitor 端口验证，在默认情况下为8421：</p><p><img src="'+r+`" alt="image3"></p><p>也可以检查端口8080，可以看到已经处于监听状态：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ss</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -nltp</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 回显如下：</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> LISTEN  0  128  :::8080  :::</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  users:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">bfe</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">pid</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3299</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">fd</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停止" tabindex="-1"><a class="header-anchor" href="#停止"><span>停止</span></a></h3><p>杀死 BFE 进程即可</p><h3 id="基础配置" tabindex="-1"><a class="header-anchor" href="#基础配置"><span>基础配置</span></a></h3><p><img src="`+p+`" alt="image4"></p><h2 id="bfe-api-server" tabindex="-1"><a class="header-anchor" href="#bfe-api-server"><span>BFE API Server</span></a></h2><h3 id="安装-mysql" tabindex="-1"><a class="header-anchor" href="#安装-mysql"><span>安装 MySQL</span></a></h3><p>API Server 部署前需要先安装 MySQL，数据库版本5.6以上。</p><h3 id="下载二进制包-1" tabindex="-1"><a class="header-anchor" href="#下载二进制包-1"><span>下载二进制包</span></a></h3><p><a href="https://github.com/bfenetworks/api-server/releases" target="_blank" rel="noopener noreferrer">Releases · bfenetworks/api-server (github.com)</a></p><p>下载<code>api-server_0.0.2_linux_amd64.tar.gz</code>，并传到虚拟机上。</p><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-api-server</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zxvf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> api-server_0.0.2_linux_amd64.tar.gz</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-api-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+'" alt="image5"></p><h3 id="准备数据库" tabindex="-1"><a class="header-anchor" href="#准备数据库"><span>准备数据库</span></a></h3><p>在<code>/home/acrisps/bfe-api-server</code>下执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mysql</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">user}</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">password}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> db_ddl.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>利用<code>db_ddl.sql</code>进行 BFE 所需的数据库初始化。</p><p>阅读 SQL 语句或者直接查看数据库可以看到为 API Server 准备的 open_bfe 数据库结构：</p><p><img src="'+d+'" alt="image6"></p><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><p>修改<code>/home/acrisps/bfe-api-server/conf/api_server.toml</code>，填入相关配置，至少填入数据库用户名密码：</p><p><img src="'+o+'" alt="image7"></p><h3 id="运行-1" tabindex="-1"><a class="header-anchor" href="#运行-1"><span>运行</span></a></h3><p>在<code>/home/acrisps/bfe-api-server</code>下执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./api-server</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./conf</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -sc</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> api_server.toml</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+c+'" alt="image8"></p><h2 id="bfe-dashboard" tabindex="-1"><a class="header-anchor" href="#bfe-dashboard"><span>BFE Dashboard</span></a></h2><h3 id="下载二进制包-2" tabindex="-1"><a class="header-anchor" href="#下载二进制包-2"><span>下载二进制包</span></a></h3><p><a href="https://github.com/bfenetworks/dashboard/releases" target="_blank" rel="noopener noreferrer">Releases · bfenetworks/dashboard (github.com)</a></p><p>下载<code>bfe_dashboard_0.0.2.tar.gz</code>，并传到虚拟机上。</p><h3 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1"><span>配置</span></a></h3><p>解压，并将解压出的内容放在 API Server 的 static 文件夹里：</p><p><img src="'+g+'" alt="image9"></p><h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证"><span>验证</span></a></h3><p>此时，只要 API Server 运行就可以访问 Dashboard 图形界面，默认端口为8183，此处使用了端口映射在宿主机访问：</p><p><img src="'+b+'" alt="image10"></p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>若使用带 GUI 的虚拟机，在虚拟机内访问 Dashboard，可能会出现因为系统浏览器版本过于老旧导致的 js 执行异常，表现为点击无反应，控制台报错等。</p></div><p>初始默认的用户名密码都是<code>admin</code>，登陆后最好修改密码：</p><p><img src="'+m+`" alt="image11"></p><h2 id="bfe-conf-agent" tabindex="-1"><a class="header-anchor" href="#bfe-conf-agent"><span>BFE Conf Agent</span></a></h2><h3 id="下载二进制包-3" tabindex="-1"><a class="header-anchor" href="#下载二进制包-3"><span>下载二进制包</span></a></h3><p><a href="https://github.com/bfenetworks/conf-agent/releases" target="_blank" rel="noopener noreferrer">Releases · bfenetworks/conf-agent (github.com)</a></p><h3 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-conf-agent</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zxvf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> conf-agent_0.0.2_linux_amd64.tar.gzz</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-conf-agent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+f+`" alt="image12"></p><h3 id="配置-2" tabindex="-1"><a class="header-anchor" href="#配置-2"><span>配置</span></a></h3><p>在 Conf Agent 软件包下的<code>conf/conf-agent.toml</code>配置相关配置项，包括:</p><ul><li>BFE 集群名</li><li>BFE 配置文件位置</li><li>API Server 地址</li><li>......</li></ul><h4 id="需要手动维护的配置文件" tabindex="-1"><a class="header-anchor" href="#需要手动维护的配置文件"><span>需要手动维护的配置文件</span></a></h4><p>官方文档描述如下：</p><blockquote><p>对于tls配置，现在APIServer不支持 配置 的文件有：</p><ul><li>client_ca</li><li>client_crl</li><li>session_ticket_key.data</li><li>tls_rule_conf.data</li></ul><p>APIServer支持配置和下发的文件有：</p><ul><li>server_cert_conf.data</li></ul><p>在热加载tls配置时， tls_rule_conf.data 内容和 server_cert_conf.data 内容存在关联。当两者不一致时就会出现关联检查失败而报错。</p><p>当前 默认的 tls_rule_conf.data 的配置依赖<code>example.org</code>证书配置 来指定 租户<code>example_product</code>的TLS协议配置。如果自行添加的证书中不存在 <code>example.org</code> 证书，并且继续使用默认的 tls_rule_conf.data 配置内容，ConfAgent 将在触发BFE热加载tls配置时报错。</p><p>对这个问题的解决方案是自行维护 tls_rule_conf.data 文件（ConfAgent会直接使用修改后的文件内容），根据业务需求手动修改该文件的原始内容。</p></blockquote><p>在不需要对租户进行自定义HTTPS配置时，文档建议的修改方案为：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">- 默认配置内容：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Version</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">12</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">DefaultNextProtos</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http/1.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Config</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">example_product</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">VipConf</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">10.199.4.14</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      ],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">SniConf</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">example.org</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CertName</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">example.org</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">NextProtos</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">h2;rate=100;isw=65535;mcs=200;level=0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http/1.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      ],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Grade</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ClientAuth</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">      &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ClientCAName</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">example_ca</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">- 修改后的简化配置：</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Version</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">12</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">DefaultNextProtos</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http/1.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Config</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若要按照建议修改：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-server/conf/tls_conf</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tls_rule_conf.data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="token" tabindex="-1"><a class="header-anchor" href="#token"><span>token</span></a></h4><p>Conf Agent 通过 token 获取对 API Server 的访问权限。</p><blockquote><p>Api Server 当前会对请求鉴权，需要设置 Authorization 头，<a href="https://github.com/bfenetworks/dashboard/blob/develop/docs/zh-cn/user-guide/system-view/user-management.md#token%E7%AE%A1%E7%90%86" target="_blank" rel="noopener noreferrer">通过Dashboard获取Token</a></p></blockquote><p>在 Dashboard 图形化控制台的 用户管理 - token 生成 token，在 Conf Agent 配置文件里配置 token。需要填写 token 的配置项有：</p><ul><li>ConfTaskHeaders</li><li>ExtraFileTaskHeaders</li></ul><h3 id="运行-2" tabindex="-1"><a class="header-anchor" href="#运行-2"><span>运行</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/acrisps/bfe-conf-agent/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./conf-agent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+'" alt="image13"></p><h2 id="部署验证" tabindex="-1"><a class="header-anchor" href="#部署验证"><span>部署验证</span></a></h2><p>在图形化界面里配置一个简单的 BFE 服务：</p><h3 id="前端配置" tabindex="-1"><a class="header-anchor" href="#前端配置"><span>前端配置</span></a></h3><p><img src="'+v+'" alt="image14"></p><p><img src="'+y+'" alt="image15"></p><h3 id="后端配置" tabindex="-1"><a class="header-anchor" href="#后端配置"><span>后端配置</span></a></h3><p><img src="'+A+'" alt="image16"></p><p>这里偷了个懒，让请求转发到本机的8421端口，这个端口是 BFE monitor 的默认端口，若转发成功我们应该可以看见 BFE monitor 的界面。</p><p>一路默认创建子集群、集群，可以抄原本 BFE 配置文件里的默认配置，创建域名<code>example.org</code>。</p><h3 id="转发验证" tabindex="-1"><a class="header-anchor" href="#转发验证"><span>转发验证</span></a></h3><p>记得在虚机上配置 host，让 <code>example.org</code>指向本机环回地址。</p><p><img src="'+B+'" alt="image17"></p><p><img src="'+_+'" alt="image18"></p><p>可以看到我们对8080和8443的请求被转发到了8421，显示出了 monitor 界面。</p><p>可以反复修改转发设置并尝试访问，验证配置热加载能力。</p><h2 id="文档合集-参考文献" tabindex="-1"><a class="header-anchor" href="#文档合集-参考文献"><span>文档合集 / 参考文献</span></a></h2><p>安装文档：<a href="https://www.bfe-networks.net/zh_cn/installation/install/" target="_blank" rel="noopener noreferrer">安装概述 - BFE (bfe-networks.net)</a></p><p>BFE 核心仓库：<a href="https://github.com/bfenetworks/bfe" target="_blank" rel="noopener noreferrer">GitHub - bfenetworks/bfe: A modern layer 7 load balancer from baidu</a></p><p>API Server 仓库：<a href="https://github.com/bfenetworks/api-server" target="_blank" rel="noopener noreferrer">GitHub - bfenetworks/api-server: API server for BFE control plane</a></p><p>API Server 配置 / 控制面整体部署：<a href="https://github.com/bfenetworks/api-server/blob/develop/docs/zh_cn/deploy.md#confagent%E9%83%A8%E7%BD%B2" target="_blank" rel="noopener noreferrer">api-server/docs/zh_cn/deploy.md at develop · bfenetworks/api-server · GitHub</a></p><p>Dashboard 仓库：<a href="https://github.com/bfenetworks/dashboard" target="_blank" rel="noopener noreferrer">GitHub - bfenetworks/dashboard: dashboard for BFE control plane</a></p><p>Dashboard 部署：<a href="https://github.com/bfenetworks/dashboard/blob/develop/docs/zh-cn/deploy.md" target="_blank" rel="noopener noreferrer">dashboard/docs/zh-cn/deploy.md at develop · bfenetworks/dashboard · GitHub</a></p><p>Conf Agent 仓库：<a href="https://github.com/bfenetworks/conf-agent" target="_blank" rel="noopener noreferrer">GitHub - bfenetworks/conf-agent: Configuration agent for BFE control plane</a></p><p>Conf Agent 配置：<a href="https://github.com/bfenetworks/conf-agent/blob/develop/docs/zh_cn/config.md" target="_blank" rel="noopener noreferrer">conf-agent/docs/zh_cn/config.md at develop · bfenetworks/conf-agent · GitHub</a></p><p>可查看 <a href="https://github.com/bfenetworks/dashboard/blob/develop/docs/zh-cn/user-guide/SUMMARY.md" target="_blank" rel="noopener noreferrer">Dashboard 使用文档</a> 了解BFE管理控制台的基本概念和使用流程。</p><p>《深入理解 BFE》：<a href="https://github.com/baidu/bfe-book" target="_blank" rel="noopener noreferrer">GitHub - baidu/bfe-book: In-depth Understanding of BFE《深入理解BFE》（Book for BFE, a CNCF open source project.）</a></p>',126)]))}const q=i(C,[["render",D]]),F=JSON.parse('{"path":"/article/bgxlcqf7/","title":"BFE + 图形界面离线部署","lang":"zh-CN","frontmatter":{"title":"BFE + 图形界面离线部署","createTime":"2024/08/04","permalink":"/article/bgxlcqf7/"},"readingTime":{"minutes":8.68,"words":2603},"git":{"updatedTime":1738674496000,"contributors":[{"name":"acrisps","username":"acrisps","email":"fmzcyl@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/acrisps?v=4","url":"https://github.com/acrisps"}]},"filePathRelative":"Dev/BFE + 图形界面离线部署.md","headers":[],"categoryList":[{"id":"55f37d","sort":10000,"name":"Dev"}]}');export{q as comp,F as data};
