import{_ as t,c as a,e as r,o}from"./app-Cv6C7NNg.js";const i={};function n(s,e){return o(),a("div",null,e[0]||(e[0]=[r('<h2 id="about-patterns" tabindex="-1"><a class="header-anchor" href="#about-patterns"><span>About Patterns</span></a></h2><ul><li>Knowing the OO basics does not make you a good OO designer.</li><li>Good OO designs are reusable, extensible and maintainable.</li><li>Patterns show you how to build systems with good OO design qualities.</li><li>Patterns are proven object oriented experience.</li><li>Patterns don&#39;t give you code, they give you general solutions to design problems. You apply them to your specific application.</li><li>Patterns aren&#39;t invented, they are discovered.</li><li>Most patterns and principles address issues of change in software.</li><li>Most patterns allow some part of a system to vary independently of all other parts.</li><li>We often try to take what varies in a system and encapsulate it.</li><li>Patterns provide a shared language that can maximize the value of your communication with other developer.</li></ul><p>设计模式按照作用和结构，可以如下分类：</p><table><thead><tr><th></th><th>创建型模式</th><th>结构型模式</th><th>行为型模式</th></tr></thead><tbody><tr><td>类模式</td><td>工厂方法模式</td><td>类适配器模式</td><td>模板方法模式</td></tr><tr><td>对象模式</td><td>简单工厂模式<br>抽象工厂模式<br>建造者模式<br>原型模式<br>单例模式</td><td>对象适配器模式<br>桥接模式<br>组合模式<br>装饰模式<br>外观模式<br>享元模式<br>代理模式</td><td>命令模式<br>迭代器模式<br>中介者模式<br>观察者模式<br>状态模式<br>策略模式</td></tr></tbody></table><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><p>NJUSE 软件系统设计课程讲义</p><p>Co-rricula：<a href="https://xjynotes.top/" target="_blank" rel="noopener noreferrer">xjynotes.top</a></p><p>熊佬的博客：<a href="https://eaglebear2002.github.io/" target="_blank" rel="noopener noreferrer">eaglebear2002.github.io</a></p>',8)]))}const l=t(i,[["render",n]]),p=JSON.parse('{"path":"/article/urvgzvf1/","title":"设计模式概要","lang":"zh-CN","frontmatter":{"title":"设计模式概要","createTime":"2025/06/20 15:53:34","permalink":"/article/urvgzvf1/","description":"About Patterns Knowing the OO basics does not make you a good OO designer. Good OO designs are reusable, extensible and maintainable. Patterns show you how to build systems with...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式概要\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-18T13:58:55.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://acrisps.github.io/article/urvgzvf1/"}],["meta",{"property":"og:site_name","content":"Citrus Notes"}],["meta",{"property":"og:title","content":"设计模式概要"}],["meta",{"property":"og:description","content":"About Patterns Knowing the OO basics does not make you a good OO designer. Good OO designs are reusable, extensible and maintainable. Patterns show you how to build systems with..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-18T13:58:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-18T13:58:55.000Z"}]]},"readingTime":{"minutes":1.1,"words":331},"git":{"createdTime":1750578980000,"updatedTime":1752847135000,"contributors":[{"name":"acrisps","username":"acrisps","email":"fmzcyl@163.com","commits":4,"avatar":"https://avatars.githubusercontent.com/acrisps?v=4","url":"https://github.com/acrisps"}]},"autoDesc":true,"filePathRelative":"Learn/软件系统设计/设计模式概要.md","headers":[],"categoryList":[{"id":"2f1a3e","sort":10002,"name":"Learn"},{"id":"1fd58e","sort":10003,"name":"软件系统设计"}]}');export{l as comp,p as data};
